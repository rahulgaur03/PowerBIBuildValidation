trigger:
  branches:
    include:
    - none
pr:
  branches:
    include:
    - none
pool:
  vmImage: windows-latest
stages:
- stage: __default
  jobs:
  - job: MainJob
    displayName: 'PowerBI Dataset Build Validation via Data Model Analyzer'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    steps:
    - task: 6d15af64-176c-496d-b583-fd2ae21d4df4@1
      inputs:
        repository: self
    - task: CopyFiles@2
      displayName: 'Copy PowerBI Dataset'
      inputs:
        SourceFolder: '$(PowerBIDatasetFolderName)'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PowerShell@2
      displayName: Build Validation
      inputs:
        targetType: 'inline'
        script: "$TenantID = \"$(TenantID)\"\n$ClientID = \"$(ClientID)\"\n$ClientSecret = \"$(ClientSecret)\"\n$SenderMailAccount = \"$(SenderMailAccount)\"\n$SenderMailPassword = \"$(SenderMailPassword)\"\n$DatasetName\n$TestWorkspaceName = \"$(TestWorkspaceName)\"\n$ProdWorkspaceName = \"$(ProdWorkspaceName)\"\n$Workspace_Processing = \"powerbi://api.powerbi.com/v1.0/myorg/$TestWorkspaceName\"\n$Workspace_Publish = \"powerbi://api.powerbi.com/v1.0/myorg/$ProdWorkspaceName\"\n$FeatureArray = \"$(FeatureArray)\"\n$ShowChangesOnly = \"$(ShowChangesOnly)\"\n$IsExportToExcel = \"$(IsExportToExcel)\"\n$IsSendMail = \"$(IsSendMail)\"\n$MailReceipients = \"$(MailReceipients)\"\n$DirectoryPath = \"$(Build.ArtifactStagingDirectory)\"\n\nInstall-Module -Name MicrosoftPowerBIMgmt -Scope CurrentUser -Force -AllowClobber\nInstall-Module -Name ImportExcel -Scope CurrentUser -Force -AllowClobber\nImport-Module -Name MicrosoftPowerBIMgmt\nImport-Module ImportExcel\nImport-Module SqlServer\n\n$CurrentDate = Get-Date -Format \"dddd MM/dd/yyyy\"\n$SecuredApplicationSecret = ConvertTo-SecureString -String $ClientSecret -AsPlainText -Force\n$credential = New-Object System.Management.Automation.PSCredential($ClientID, $SecuredApplicationSecret)\n\nfunction QueryExecutor {\n    param($Server, $Query)\n    if ($Server -eq \"Processing\") {\n        $response = invoke-ascmd -Database $DatasetName -Query $Query -server $Workspace_Processing -ServicePrincipal -Tenant $TenantID -Credential $credential\n    }\n    elseif ($Server -eq \"Publish\") {\n        $response = invoke-ascmd -Database $DatasetName -Query $Query -server $Workspace_Publish -ServicePrincipal -Tenant $TenantID -Credential $credential\n    }\n    $xml = [xml]$response\n    $ns = New-Object Xml.XmlNamespaceManager $xml.NameTable\n    $ns.AddNamespace(\"ns\", \"urn:schemas-microsoft-com:xml-analysis:rowset\")\n    return $xml.SelectNodes('//ns:row', $ns)\n}\n\nfunction MeasureValueComparison {\n    Write-Host \"Comparing Measure values: This feature will be coming soon.\"\n    $excelDataMeasureValue = @()\n    $ReturnData = [PSCustomObject]@{\n        'HTML'     = \"\"\n        'ExcelData' = $excelDataMeasureValue\n        'FName'     = \"MeasureValueComparison\"\n    }\n    return $ReturnData\n}\n\nfunction TableAttributeComparison {\n    Write-Host \"Comparing Table Attributes\"	\n    $Query = \"SELECT [CATALOG_NAME] AS [TabularName], [DIMENSION_UNIQUE_NAME] AS [DimensionName], HIERARCHY_CAPTION AS [AttributeName], HIERARCHY_IS_VISIBLE AS [IsAttributeVisible] FROM `$system`.MDSchema_hierarchies WHERE CUBE_NAME  ='Model'\"\n\n    $Dimension_Attribute_Processing = QueryExecutor -Server \"Processing\" -Query $Query\n    $Dimension_Attribute_Publish = QueryExecutor -Server \"Publish\" -Query $Query\n\n    $AttributeVisbilityChanged, $AttributeAdded, $AttributeDeleted, $RowCount = 0, 0, 0, 1\n    $RowCount_Processing, $RowCount_Publish = $Dimension_Attribute_Processing.Count, $Dimension_Attribute_Publish.Count\n\n    $excelDataTableAttributes = @()\n\n    $HTMLTable = @\"\n        <table style=\"width:100%; border:1px solid black; border-collapse: collapse;\">\n            <tr style=\"font-size:15px; font-weight: bold; padding:5px; color: white; border:1px solid black; background-color:#468ABD\">\n                <th style=\"border:1px solid black\">#</th>\n                <th style=\"border:1px solid black\">Table Name</th>\n                <th style=\"border:1px solid black\">Attribute Name</th>\n                <th style=\"border:1px solid black\">Is Visible</th>\n                <th style=\"border:1px solid black\">Status</th>\n            </tr>\n\"@\n\n    for ($i = 0; $i -lt $RowCount_Processing; $i++) {\n        $flag1, $flag2, $flag3 = 0, 0, 0\n        $Result11, $Result12, $Result13 = $Dimension_Attribute_Processing[$i].C1, $Dimension_Attribute_Processing[$i].C2, $Dimension_Attribute_Processing[$i].C3\n        $Result21, $Result22, $Result23 = '', '', ''\n        for ($j = 0; $j -lt $RowCount_Publish; $j++) {\n            $Result21 = $Dimension_Attribute_Publish[$j].C1\n            $Result22 = $Dimension_Attribute_Publish[$j].C2\n            $Result23 = $Dimension_Attribute_Publish[$j].C3\n\n            if ($Result11 -eq $Result21) {\n                $flag1 = 1                \n\n                if ($Result12 -eq $Result22) {\n                    $flag2 = 1                   \n\n                    if ($Result13 -eq $Result23) {\n                        $flag3 = 1\n                    }\n                }\n        \n            }\n        }\n\n        if ($flag3 -eq 1) {\n            $Result, $BackgroundColor = \"No Change\", \"\"\n            if ($ShowChangesOnly -eq \"1\") { continue }\n        }\n        elseif ($flag2 -eq 1 -and $flag3 -eq 0) {\n            $Result, $BackgroundColor = \"Attribute Visibility Changed\", \"#FFB52E\"\n            $AttributeVisbilityChanged++\n        }\n        elseif ($flag1 -eq 1 -and $flag2 -eq 0) {\n            $Result, $BackgroundColor = \"Attribute Added\", \"#B3EDA7\"\n            $AttributeAdded++\n        }\n        elseif ($flag1 -eq 0) {\n            $Result, $BackgroundColor = \"Table/Attribute Added\", \"#B3EDA7\"\n            $AttributeAdded++\n        }\n\n        $HTMLTable += @\"\n        <tr style=\"border:1px solid black; padding-right:5px; padding-left:5px\"> \n        <td style=\"border:1px solid black;text-align: left\">$RowCount</td> \n        <td style=\"border:1px solid black;text-align: left\">$Result11</td> \n        <td style=\"border:1px solid black;text-align: left\">$Result12</td> \n        <td style=\"border:1px solid black;text-align: left\">$Result13</td> \n        <td style=\"border:1px solid black;text-align: left; background-color:$BackgroundColor\">$Result</td>\n        </tr>\n\"@\n        if ($IsExportToExcel -eq \"1\") {\n            $excelDataTableAttributes += [PSCustomObject]@{\n                'Table Name'     = $Result11\n                'Attribute Name' = $Result12\n                'Is Visible'     = $Result13\n                'Status'         = $Result\n            }\n        }\n        \n        $RowCount++\n    }\n\n    for ($i = 0; $i -lt $RowCount_Publish; $i++) {\n        $flag1, $flag2, $flag3 = 0, 0, 0\n        $Result11, $Result12, $Result13 = $Dimension_Attribute_Publish[$i].C1, $Dimension_Attribute_Publish[$i].C2, $Dimension_Attribute_Publish[$i].C3\n        $Result21, $Result22, $Result23 = '', '', ''\n\n        for ($j = 0; $j -lt $RowCount_Processing; $j++) {\n            $Result21, $Result22, $Result23 = $Dimension_Attribute_Processing[$j].C1, $Dimension_Attribute_Processing[$j].C2, $Dimension_Attribute_Processing[$j].C3\n            if ($Result11 -eq $Result21) {\n                $flag1 = 1\n                if ($Result12 -eq $Result22) {\n                    $flag2 = 1\n                    if ($Result13 -eq $Result23) {\n                        $flag3 = 1\n                    }\n                }\n            }\n        }\n        if ($flag1 -eq 1 -and $flag2 -eq 0 -or $flag1 -eq 0) {\n            $Result = if ($flag1 -eq 1 -and $flag2 -eq 0) { \"Attribute Deleted\" } else { \"Table/Attribute Deleted\" }\n            $AttributeDeleted++\n            $HTMLTable += \"<tr style=\"\"border:1px solid black; padding-right:5px; padding-left:5px\"\"> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$RowCount</td> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$Result11</td> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$Result12</td> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$Result13</td> \n                <td style=\"\"border:1px solid black;text-align: left; background-color:#ffa6a6\"\">$Result</td>\n            </tr>\"\n            if ($IsExportToExcel -eq \"1\") {\n                $excelDataTableAttributes += [PSCustomObject]@{\n                    'Table Name'     = $Result11\n                    'Attribute Name' = $Result12\n                    'Is Visible'     = $Result13\n                    'Status'         = $Result\n                }\n            }\n            $RowCount++\n        }        \n        \n    }\n\n    $HTMLTable += \"</table>\"\n    $Summary = \"<p><b>Attribute(s) Added:</b> $AttributeAdded; &emsp; <b>Attribute(s) Deleted:</b> $AttributeDeleted; &emsp; <b>Attribute Visibility Updated:</b> $AttributeVisbilityChanged</p><br><br>\"\n    $ReturnData = [PSCustomObject]@{\n        'HTML'     = $Summary + $HTMLTable\n        'ExcelData' = $excelDataTableAttributes\n        'FName'     = \"TableAttributeComparison\"\n    }\n    return $ReturnData\n}\n\nfunction RelationshipComparison {\n    Write-Host \"Comparing Relationships\"\n    $Query = \"SELECT [MEASUREGROUP_NAME] AS [LeftHand], [DIMENSION_UNIQUE_NAME] AS [RightHand], [MEASUREGROUP_CARDINALITY] AS [LeftHandCard], [DIMENSION_CARDINALITY] AS [RightHandCard], [DIMENSION_GRANULARITY] AS [RightHandKey] FROM `$system`.MDSCHEMA_MEASUREGROUP_DIMENSIONS WHERE [CUBE_NAME] ='Model'\"\n\n    $Relationship_Processing = QueryExecutor -Server \"Processing\" -Query $Query\n    $Relationship_Publish = QueryExecutor -Server \"Publish\" -Query $Query\n\n    $RowCount_Processing, $RowCount_Publish = $Relationship_Processing.Count, $Relationship_Publish.Count\n    $RowCount, $RelationshipAdded, $RelationshipDeleted, $CardinalityChanged, $RelationshipAttributeChanged = 1, 0, 0, 0, 0\n\n    $excelDataRelationship = @()\n\n    $HTMLTable = @\"\n        <table style=\"width:100%; border:1px solid black; border-collapse: collapse;\">\n            <tr style=\"font-size:15px; font-weight: bold; padding:5px; color: white; border:1px solid black; background-color:#468ABD\">\n                <th style=\"border:1px solid black\">#</th>\n                <th style=\"border:1px solid black\">Fact Name</th>\n                <th style=\"border:1px solid black\">Dim Name</th>\n                <th style=\"border:1px solid black\">Fact Cardinality</th>\n                <th style=\"border:1px solid black\">Dim Cardinality</th>\n                <th style=\"border:1px solid black\">Relationship On Column</th>\n                <th style=\"border:1px solid black\">Status</th>\n            </tr>\n\"@\n\n    for ($i = 0; $i -lt $RowCount_Processing; $i++) {\n        $flag1, $flag2, $flag3, $flag4, $flag5 = 0, 0, 0, 0, 0\n        $Result10, $Result20, $Result11, $Result21, $Result12, $Result22, $Result13, $Result23, $Result14, $Result24 = $Relationship_Processing[$i].C0, '', $Relationship_Processing[$i].C1, '', $Relationship_Processing[$i].C2, '', $Relationship_Processing[$i].C3, '', $Relationship_Processing[$i].C4, ''\n\n        for ($j = 0; $j -lt $RowCount_Publish; $j++) {\n            $Result20, $Result21, $Result22, $Result23, $Result24 = $Relationship_Publish[$j].C0, $Relationship_Publish[$j].C1, $Relationship_Publish[$j].C2, $Relationship_Publish[$j].C3, $Relationship_Publish[$j].C4\n\n            if ($Result10 -eq $Result20) {\n                $flag1 = 1                \n                if ($Result11 -eq $Result21) {\n                    $flag2 = 1                   \n                    if ($Result12 -eq $Result22) {\n                        $flag3 = 1\n                        if ($Result13 -eq $Result23) {\n                            $flag4 = 1\n                            if ($Result14 -eq $Result24) {\n                                $flag5 = 1\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if ($flag5 -eq 1) {\n            $Result, $BackgroundColor = \"No Change\", \"\"\n            if ($ShowChangesOnly -eq \"1\") { continue }\n        }\n        elseif ($flag4 -eq 1 -and $flag5 -eq 0) {\n            $Result, $BackgroundColor = \"Relationship Attribute Changed\", \"#FFB52E\"\n            $RelationshipAttributeChanged++\n        }\n        elseif (($flag3 -eq 1 -and $flag4 -eq 0) -or ($flag2 -eq 1 -and $flag3 -eq 0)) {\n            $Result, $BackgroundColor = \"Cardinality Changed\", \"#FFB52E\"\n            $CardinalityChanged++\n        }\n        elseif ($flag1 -eq 1 -and $flag2 -eq 0) {\n            $Result, $BackgroundColor = \"Relationship Added\", \"#B3EDA7\"\n            $RelationshipAdded++\n        }\n        else {\n            continue\n        }\n        $HTMLTable += @\"\n        <tr style=\"border:1px solid black; padding-right:5px; padding-left:5px\"> \n        <td style=\"border:1px solid black;text-align: left\">$RowCount</td> \n        <td style=\"border:1px solid black;text-align: left\">$Result10</td> \n        <td style=\"border:1px solid black;text-align: left\">$Result11</td> \n        <td style=\"border:1px solid black;text-align: left\">$Result12</td>\n        <td style=\"border:1px solid black;text-align: left\">$Result13</td>\n        <td style=\"border:1px solid black;text-align: left\">$Result14</td> \n        <td style=\"border:1px solid black;text-align: left; background-color:$BackgroundColor\">$Result</td>\n        </tr>\n\"@\n        if ($IsExportToExcel -eq \"1\") {\n            $excelDataRelationship += [PSCustomObject]@{\n                'Fact Name'              = $Result10\n                'Dim Name'               = $Result11\n                'Fact Cardinality'       = $Result12\n                'Dim Cardinality'        = $Result13\n                'Relationship On Column' = $Result14\n                'Status'                 = $Result\n            }\n        }\n        $RowCount++\n    }\n\n    for ($i = 0; $i -lt $RowCount_Publish; $i++) {\n        $flag1, $flag2 = 0, 0\n        $Result10, $Result11, $Result12, $Result13, $Result14 = $Relationship_Publish[$i].C0, $Relationship_Publish[$i].C1, $Relationship_Publish[$i].C2, $Relationship_Publish[$i].C3, $Relationship_Publish[$i].C4\n        $Result20, $Result21, $Result22, $Result23, $Result24 = '', '', '', '', ''\n        \n        for ($j = 0; $j -lt $RowCount_Processing; $j++) {\n            $Result20, $Result21, $Result22, $Result23, $Result24 = $Relationship_Processing[$j].C0, $Relationship_Processing[$j].C1, $Relationship_Processing[$j].C2, $Relationship_Processing[$j].C3, $Relationship_Processing[$j].C4\n\n            if ($Result11 -eq $Result21) {\n                $flag1 = 1\n                if ($Result12 -eq $Result22) {\n                    $flag2 = 1\n                }\n            }\n        }\n\n        if (($flag1 -eq 1 -and $flag2 -eq 0) -or $flag1 -eq 0) {\n            $Result = \"Relationship Deleted\"\n            $RelationshipDeleted++\n            $HTMLTable += \n            \"<tr style=\"\"border:1px solid black; padding-right:5px; padding-left:5px\"\"> \n            <td style=\"\"border:1px solid black;text-align: left\"\">$RowCount</td> \n            <td style=\"\"border:1px solid black;text-align: left\"\">$Result10</td> \n            <td style=\"\"border:1px solid black;text-align: left\"\">$Result11</td> \n            <td style=\"\"border:1px solid black;text-align: left\"\">$Result12</td>\n            <td style=\"\"border:1px solid black;text-align: left\"\">$Result13</td>\n            <td style=\"\"border:1px solid black;text-align: left\"\">$Result14</td>\n            <td style=\"\"border:1px solid black;text-align: left; background-color:#ffa6a6\"\">$Result</td>\n            </tr>\"\n\n            if ($IsExportToExcel -eq \"1\") {\n                $excelDataRelationship += [PSCustomObject]@{\n                    'Fact Name'              = $Result10\n                    'Dim Name'               = $Result11\n                    'Fact Cardinality'       = $Result12\n                    'Dim Cardinality'        = $Result13\n                    'Relationship On Column' = $Result14\n                    'Status'                 = $Result\n                }\n            }\n            $RowCount++\n        }\n    }\n\n    $HTMLTable += \"</table>\"\n    $Summary = \"<p><b>Relationship(s) Added:</b> $RelationshipAdded; &emsp; <b>Relationship(s) Deleted:</b> $RelationshipDeleted; &emsp; <b>Cardinality Changed:</b> $CardinalityChanged; &emsp; <b>Relationship Attribute Changed:</b> $RelationshipAttributeChanged</p><br><br>\"\n    $ReturnData = [PSCustomObject]@{\n        'HTML'     = $Summary + $HTMLTable\n        'ExcelData' = $excelDataRelationship\n        'FName'     = \"RelationshipComparison\"\n    }\n    return $ReturnData\n}\n\nfunction MeasureDefinitionComparison {\n    Write-Host \"Comparing Measure Definition\"\n    $Query = \"SELECT [MEASURE_NAME] AS [MeasureName], [DEFAULT_FORMAT_STRING] AS [MeasureFormat], [EXPRESSION] AS [MeasureDefinition], [MEASURE_IS_VISIBLE] AS [IsVisible] FROM `$SYSTEM`.MDSCHEMA_MEASURES WHERE CUBE_NAME  ='Model'\"\n    \n    $MeasureDefinition_Processing = QueryExecutor -Server \"Processing\" -Query $Query\n    $MeasureDefinition_Publish = QueryExecutor -Server \"Publish\" -Query $Query\n\n    $RowCount_Processing, $RowCount_Publish = $MeasureDefinition_Processing.Count, $MeasureDefinition_Publish.Count\n    $RowCount, $MeasureDefinitionUpdated, $MeasureFormatUpdated, $MeasureDeleted, $MeasureAdded, $MeasureVisibilityChanged = 1, 0, 0, 0, 0 , 0\n\n    $excelDataMeasureDefinition = @()\n    \n    $HTMLTable = \"\n        <table style=\"\"width:100%; border:1px solid black; border-collapse: collapse;\"\">\n            <tr style=\"\"font-size:15px; font-weight: bold; padding:5px; color: white; border:1px solid black; background-color:#468ABD\"\">\n                <th style=\"\"border:1px solid black\"\">#</th>\n                <th style=\"\"border:1px solid black\"\">Measure Name</th>\n                <th style=\"\"border:1px solid black\"\">Measure Format</th>\n                <th style=\"\"border:1px solid black\"\">Measure Definition</th>\n                <th style=\"\"border:1px solid black\"\">Old Definition/Format</th>\n                <th style=\"\"border:1px solid black\"\">Is Visbile</th>\n                <th style=\"\"border:1px solid black\"\">Status</th>\n            </tr>\"\n    \n    for ($i = 0; $i -lt $RowCount_Processing; $i++) {\n        $flag1, $flag2, $flag3, $flag4 = 0, 0, 0, 0\n        $Result10, $Result11, $Result12, $Result13 = $MeasureDefinition_Processing[$i].C0, $MeasureDefinition_Processing[$i].C1, $MeasureDefinition_Processing[$i].C2, $MeasureDefinition_Processing[$i].C3\n        $Result20, $Result21, $Result22, $Result23 = '', '', '', ''\n    \n        for ($j = 0; $j -lt $RowCount_Publish; $j++) {\n            $Result20, $Result21, $Result22, $Result23 = $MeasureDefinition_Publish[$j].C0, $MeasureDefinition_Publish[$j].C1, $MeasureDefinition_Publish[$j].C2, $MeasureDefinition_Publish[$j].C3\n\n            if ($Result10 -eq $Result20) {\n                $flag1 = 1               \n                if ($Result11 -eq $Result21) {\n                    $flag2 = 1                   \n                    if ($Result12 -eq $Result22) {\n                        $flag3 = 1\n                        if ($Result13 -eq $Result23) {\n                            $flag4 = 1\n                        }\n                    }\n                }\n            }\n        }\n    \n        if ($flag4 -eq 1) {\n            $Result = \"No Change\"\n            $OldResult = \"\"\n            $BGColor = \"\"\n            if ($ShowChangesOnly -eq \"1\") { continue }\n        }\n        elseif ($flag3 -eq 1 -and $flag4 -eq 0) {\n            $Result = \"Measure Visibility Changed\"\n            $MeasureVisibilityChanged++\n            $OldResult = \"\"\n            $BGColor = \"#FFB52E\"\n        }\n        elseif ($flag2 -eq 1 -and $flag3 -eq 0) {\n            $Result = \"Definition Updated\"\n            $MeasureDefinitionUpdated++\n            $OldResult = $MeasureDefinition_Publish[$i].C2\n            $BGColor = \"#FFB52E\"\n        }\n        elseif ($flag1 -eq 1 -and $flag2 -eq 0) {\n            $Result = \"Format Updated\"\n            $MeasureFormatUpdated++\n            $OldResult = $MeasureDefinition_Publish[$i].C1\n            $BGColor = \"#FFB52E\"\n        }\n        elseif ($flag1 -eq 0) {\n            $Result = \"Measure Added\"\n            $OldResult = \"\"\n            $BGColor = \"#B3EDA7\"\n            $MeasureAdded++\n        }\n        else {\n            continue\n        }\n        $HTMLTable += @\"\n        <tr style=\"border:1px solid black; padding-right:5px; padding-left:5px\"> \n            <td style=\"border:1px solid black;text-align: left\">$RowCount</td> \n            <td style=\"border:1px solid black;text-align: left\">$Result10</td> \n            <td style=\"border:1px solid black;text-align: left\">$Result11</td> \n            <td style=\"border:1px solid black;text-align: left\">$Result12</td>\n            <td style=\"border:1px solid black;text-align: left\">$OldResult</td>\n            <td style=\"border:1px solid black;text-align: left\">$Result13</td>\n            <td style=\"border:1px solid black;text-align: left; background-color:$BGColor\">$Result</td>\n        </tr>\n\"@\n\n        if ($IsExportToExcel -eq \"1\") {\n            $excelDataMeasureDefinition += [PSCustomObject]@{\n                'Measure Name'          = $Result10\n                'Measure Format'        = $Result11\n                'Measure Definition'    = $Result12\n                'Old Definition/Format' = $OldResult\n                'Is Visbile'            = $Result13\n                'Status'                = $Result\n            }\n        }\n        $RowCount++\n    }\n    \n    for ($i = 0; $i -lt $RowCount_Publish; $i++) {\n        $flag1 = 0\n        $Result10, $Result11, $Result12, $Result13 = $MeasureDefinition_Publish[$i].C0, $MeasureDefinition_Publish[$i].C1, $MeasureDefinition_Publish[$i].C2, $MeasureDefinition_Publish[$i].C3\n        $Result20, $Result21, $Result22, $Result23 = '', '', '', ''\n        \n        for ($j = 0; $j -lt $RowCount_Processing; $j++) {\n            $Result20, $Result21, $Result22, $Result23 = $MeasureDefinition_Processing[$j].C0, $MeasureDefinition_Processing[$j].C1, $MeasureDefinition_Processing[$j].C2, $MeasureDefinition_Processing[$j].C3\n            if ($Result10 -eq $Result20) { $flag1 = 1 }\n        }\n    \n        if ($flag1 -eq 0) {\n            $Result = \"Measure Deleted\"\n            $MeasureDeleted++\n            $HTMLTable += \n            \"<tr style=\"\"border:1px solid black; padding-right:5px; padding-left:5px\"\"> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$RowCount</td> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$Result10</td> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$Result11</td> \n                <td style=\"\"border:1px solid black;text-align: left\"\">$Result12</td>\n                <td style=\"\"border:1px solid black;text-align: left\"\"></td>\n                <td style=\"\"border:1px solid black;text-align: left\"\">$Result13</td>\n                <td style=\"\"border:1px solid black;text-align: left; background-color:#ffa6a6\"\">$Result</td>\n            </tr>\"\n\n            if ($IsExportToExcel -eq \"1\") {\n                $excelDataMeasureDefinition += [PSCustomObject]@{\n                    'Measure Name'          = $Result10\n                    'Measure Format'        = $Result11\n                    'Measure Definition'    = $Result12\n                    'Old Definition/Format' = \"\"\n                    'Is Visbile'            = $Result13\n                    'Status'                = $Result\n                }\n            }\n            $RowCount++\n        }\n    }\n    \n    $HTMLTable += \"</table>\"\n    $Summary = \"<p><b>Measure(s) Added:</b> $MeasureAdded; &emsp; <b>Measure(s) Deleted:</b> $MeasureDeleted; &emsp; <b>Definition Updated:</b> $MeasureDefinitionUpdated; &emsp; <b>Format Updated:</b> $MeasureFormatUpdated; &emsp; <b>Visibility Changed:</b> $MeasureVisibilityChanged</p><br><br>\"\n    $ReturnData = [PSCustomObject]@{\n        'HTML'     = $Summary + $HTMLTable\n        'ExcelData' = $excelDataMeasureDefinition\n        'FName'     = \"MeasureDefinitionComparison\"\n    }\n    return $ReturnData\n}\n\nfunction SendMail {\n    param($Subject, $Body)\n    $Credential = New-Object System.Management.Automation.PSCredential($SenderMailAccount, (ConvertTo-SecureString -String $SenderMailPassword -AsPlainText -Force))\n    $EmailParameters = @{\n        From       = $SenderMailAccount\n        To         = $MailReceipients -split ';'\n        Subject    = $Subject\n        Body       = $Body\n        BodyAsHtml = $true\n        SmtpServer = \"smtp.office365.com\"\n        Port       = 587\n        Credential = $Credential\n        UseSsl     = $true\n    }\n    Send-MailMessage @EmailParameters\n    Write-Host \"Mail Sent\"\n}\n\nfunction ExportToExcel {\n    param($FunctionName, $ExcelResult)\n    $ExcelPath = \"$DirectoryPath/ModelComparison_$DatasetName.xlsx\"\n    for ($i = 0; $i -lt $FunctionName.Length; $i++) {\n        $ExcelResult[$i] | Export-Excel -Path $ExcelPath -WorksheetName $FunctionName[$i] -AutoSize -BoldTopRow\n    }\n    Write-Host \"Data Exported in Excel\"\n}\n\nfunction ExecuteFeatures {\n    $html,$ExcelResult, $FunctionName  = @(), @(), @()\n    $FeatureArray.split(\",\") | ForEach-Object {\n        $values = switch ($_){\n            1 { MeasureValueComparison }\n            2 { TableAttributeComparison }\n            3 { RelationshipComparison }\n            4 { MeasureDefinitionComparison }\n        }\n    \n        # Assign values to the respective arrays\n        $html += $values.HTML\n        $ExcelResult += ,@($values.ExcelData)\n        $FunctionName += $values.FName\n    }\n\n\n\n    $html = $html -join \"<br>\"\n    if ($html -eq \"\") { return }\n    \n    $Header = \"<h2>Verificaton Summary: </h2>\" + ($FunctionName -join \", \") + \"\n        <p><b>Processing Workspace:</b> $Workspace_Processing</p>\n        <p><b>Processing Dataset:</b> $DatasetName</p>\n        <p><b>Publish Workspace:</b> $Workspace_Publish</p>\n        <p><b>Publish Dataset:</b> $DatasetName</p>\"\n    $FinalOutputBody = $Header + $html\n    $Subject = \"Power BI Dataset Comparison for \" + $DatasetName + \" as on \" + $CurrentDate\n    \n    if ($IsSendMail -eq \"1\") {\n        SendMail -Subject $Subject -Body $FinalOutputBody \n    }\n    if ($IsExportToExcel -eq \"1\") {\n        ExportToExcel -FunctionName $FunctionName -ExcelResult $ExcelResult\n    }\n}\n\nConnect-PowerBIServiceAccount -ServicePrincipal -Tenant $TenantID -Credential $credential\n$TestWorkspaceID = (Get-PowerBIWorkspace -Name \"$TestWorkspaceName\").Id\n\n$sourceBranchName, $targetBranchName = \"$(System.PullRequest.SourceBranch)\", \"$(System.PullRequest.TargetBranch)\" -replace 'refs/heads/', ''\n$changedFiles = git diff \"origin/$targetBranchName...origin/$sourceBranchName\" --name-only --diff-filter=M\n\nforeach ($file in $changedFiles) {\n    if ($file -like \"*.pbix\") {\n        $DatasetName = [System.IO.Path]::GetFileNameWithoutExtension($file)\n        $FilePath = \"$((Get-Location).path)\\$file\"\n        Write-Host \"DatasetName: $DatasetName`nProdWorkspaceName: $ProdWorkspaceName`nTestWorkspaceName: $TestWorkspaceName\"\n        New-PowerBIReport -Path $FilePath -Name $DatasetName -WorkspaceId $TestWorkspaceID -ConflictAction \"CreateOrOverwrite\"\n        Write-Host \"Dataset Publish Successfully\"\n        ExecuteFeatures\n    }\n}\nif (-not $changedFiles) {\n    Write-Host \"Empty Folder\"\n}\n"
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: DROP'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'DROP'
        publishLocation: 'Container'

